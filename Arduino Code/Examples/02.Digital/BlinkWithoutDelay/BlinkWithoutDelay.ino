/*
  การกระพริบของหลอด LED โดยไม่ใช่ฟังก์ชัน Delay

  การเปิดหลอด LED หรือการปิดหลอด LED โดยไม่ใช่ฟังก์ชัน Delay
  โดยบอร์ด Arduinos จะมี LED อยู่บนตัวอุปกรณ์ ซึ่งเราสามารถควบคุมการเปิดปิดหลอดได้โดยตรง โดยเรียกใช้จากตัวแปรที่มีชื่อว่า LED_BUILTIN
  ถ้าอยากรู้ว่าแต่ละบอร์ดมีอุปกรณ์หรือคุณสมบัติต่าง ๆ สามารถเข้าไปดูรายละเอียดได้ที่ https://www.arduino.cc/en/Main/Products

*/

// การสร้างตัวแปรเก็บค่าแบบ const int คือค่าจำนวนเต็มแบบคงที่ ที่มีชื่อว่า ledPin ที่มีการเก็บ LED_BUILTIN และปิดท้ายตด้วยเซมิโคลอน ;
const int ledPin =  LED_BUILTIN;

// การสร้างตัวแปรเก็บค่าแบบ int ที่มีชื่อว่า ledPin ที่มีการเก็บ LED_BUILTIN และปิดท้ายตด้วยเซมิโคลอน ;
int ledState = LOW;

// การสร้างตัวแปรเก็บค่าแบบ unsigned long คือค่าจํานวนเต็มแบบไม่คิดเครื่องหมาย ที่มีชื่อว่า previousMillis ที่มีการเก็บค่าตัวเลข 0 และปิดท้ายตด้วยเซมิโคลอน ;
unsigned long previousMillis = 0;

// การสร้างตัวแปรเก็บค่าแบบ const long คือค่าจำนวนเต็มแบบคงที่ ที่มีชื่อว่า interval ที่มีการเก็บตัวเลขจำนวน 1000 และปิดท้ายตด้วยเซมิโคลอน ;
const long interval = 1000;

// ส่วนของการตั้งค่าจะตั้งค่าใหม่ทุกครั้งเมื่อมีการรีเซ็ต
void setup() {
  /*คำสั่งการกำหนดชนิดของขาอุปกรณ์
    โดยใช้คำสั่ง pinMode และจะตามด้วยตัวแปรหรือตำแหน่งขา (ledPin,
    และตามต่อด้วยสถานะ OUTPUT)และปิดท้ายด้วยเซมิโคลอน ;
  */
  pinMode(ledPin, OUTPUT);
}

// ส่วนของการทำงานที่ละบรรทัดและจะทำงานวนลูปไปเรื่อย ๆ
void loop() {
  // การสร้างตัวแปรเก็บค่าแบบ unsigned long คือค่าจํานวนเต็มแบบไม่คิดเครื่องหมาย ที่มีชื่อว่า currentMillis ที่มีการเก็บค่าฟังก์ชัน millis() และปิดท้ายตด้วยเซมิโคลอน ;
  unsigned long currentMillis = millis();

  // คำสั่งเงื่อนไข โดยกำหนดให้ ถ้าตัวแปรการคำนวน currentMillis - previousMillis มีค่ามากกว่าหรือเท่ากับตัวแปร interval จึงจะสามารถเข้าไปทำงานในเงื่อนไข
  if (currentMillis - previousMillis >= interval) {
    //ค่าตัวแปร previousMillis จะมีค่าเท่ากับค่าตัวแปร currentMillis
    previousMillis = currentMillis;

    // คำสั่งเงื่อนไข โดยกำหนดให้ ถ้าตัวแปร ledState มีค่าเท่ากับเท่ากับค่าสถานะ LOW จึงจะสามารถเข้าไปทำงานในเงื่อนไข แต่ถ้าไม่ใช้จะข้ามไปเงื่อนไข else
    if (ledState == LOW) {
      //ค่าตัวแปร ledState จะมีค่าเท่ากับค่าสถานะ HIGH
      ledState = HIGH;
    } else {
      //ค่าตัวแปร ledState จะมีค่าเท่ากับค่าสถานะ LOW
      ledState = LOW;
    }

    // คำสั่ง digitalWrite กำหนดให้ตัวแปรหรือตำแหน่งขา (ledPin, มีสถานะหรือมีค่าเท่ากับตัวแปร ledState และปิดท้ายตด้วยเซมิโคลอน ;
    digitalWrite(ledPin, ledState);
  }
}
